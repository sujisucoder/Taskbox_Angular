"use strict";(self.webpackChunktaskbox_without_store=self.webpackChunktaskbox_without_store||[]).push([[770],{"./src/app/components/task.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Archived:()=>Archived,Default:()=>Default,Pinned:()=>Pinned,actionsData:()=>actionsData,default:()=>task_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),chunk_OPEUWD42=__webpack_require__("./node_modules/@storybook/addon-actions/dist/chunk-OPEUWD42.mjs"),tslib_es6=(__webpack_require__("./node_modules/@storybook/addon-actions/dist/chunk-VWCVBQ22.mjs"),__webpack_require__("./node_modules/tslib/tslib.es6.js"));var _class,core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let TaskComponent=((_class=class TaskComponent{constructor(){this.onPinTask=new core.EventEmitter,this.onArchiveTask=new core.EventEmitter}}).propDecorators={task:[{type:core.Input}],onPinTask:[{type:core.Output}],onArchiveTask:[{type:core.Output}]},_class);TaskComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-task",template:'<div class="list-item {{ task?.state }}">\r\n    <label\r\n      [attr.aria-label]="\'archiveTask-\' + task.id"\r\n      for="checked-{{ task?.id }}"\r\n      class="checkbox"\r\n    >\r\n      <input\r\n        type="checkbox"\r\n        disabled="true"\r\n        [defaultChecked]="task?.state === \'TASK_ARCHIVED\'"\r\n        name="checked-{{ task?.id }}"\r\n        id="checked-{{ task?.id }}"\r\n      />\r\n      <span class="checkbox-custom" (click)="onArchive(task.id)"></span>\r\n    </label>\r\n    <label\r\n      [attr.aria-label]="task.title + \'\'"\r\n      for="title-{{ task?.id }}"\r\n      class="title"\r\n    >\r\n      <input\r\n        type="text"\r\n        [value]="task.title"\r\n        readonly="true"\r\n        id="title-{{ task?.id }}"\r\n        name="title-{{ task?.id }}"\r\n        placeholder="Input title"\r\n      />\r\n    </label>\r\n    <button\r\n      *ngIf="task?.state !== \'TASK_ARCHIVED\'"\r\n      class="pin-button"\r\n      [attr.aria-label]="\'pinTask-\' + task.id"\r\n      (click)="onPin(task.id)"\r\n    >\r\n      <span class="icon-star"></span>\r\n    </button>\r\n  </div>\r\n'})],TaskComponent);var ngx_markdown=__webpack_require__("./node_modules/ngx-markdown/fesm2020/ngx-markdown.mjs"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs");const task_stories={title:"TaskBox/TaskComponent",component:TaskComponent,decorators:[(0,dist.moduleMetadata)({declarations:[TaskComponent],imports:[http.JF,ngx_markdown.JP.forRoot({loader:http.eN})]})]},actionsData={onPinTask:(0,chunk_OPEUWD42.aD)("onPinTask"),onArchiveTask:(0,chunk_OPEUWD42.aD)("onArchiveTask")},Default={},Pinned={args:{task:{id:"2",title:"Test Task",state:"TASK_INBOX"}}},Archived={}}}]);